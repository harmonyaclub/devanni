
Step-by-Step Guide: Deploy Your Next.js Project on Vercel using Visual Studio Code and GitHub
-----------------------------------------------------------------------------

Step 1: Create a New Next.js Project
------------------------------------
1. Open your terminal.
2. Create a new Next.js project by running the following command:

   ```bash
   npx create-next-app@latest birthday-calculator
   cd birthday-calculator
   ```

3. Install Tailwind CSS by running:

   ```bash
   npm install -D tailwindcss postcss autoprefixer
   npx tailwindcss init -p
   ```

Step 2: Configure Tailwind CSS
-------------------------------
1. Open the `tailwind.config.js` file and update it with the following content:

   ```js
   /** @type {import('tailwindcss').Config} */
   module.exports = {
     content: [
       "./pages/**/*.{js,ts,jsx,tsx}",
       "./components/**/*.{js,ts,jsx,tsx}",
     ],
     theme: {
       extend: {},
     },
     plugins: [],
   }
   ```

2. Add Tailwind CSS to your global styles in `styles/globals.css`:

   ```css
   @tailwind base;
   @tailwind components;
   @tailwind utilities;
   ```

Step 3: Create the Main Page
----------------------------
1. Go to the `pages/index.js` file and replace its content with the following code:

   ```jsx
   import { useState, useEffect } from 'react';

   export default function Home() {
     const [birthday, setBirthday] = useState('');
     const [ageDetails, setAgeDetails] = useState(null);

     useEffect(() => {
       if (birthday) {
         calculateAge();
       }
     }, [birthday]);

     const calculateAge = () => {
       const now = new Date();
       const birthDate = new Date(birthday);
       const differenceInMilliseconds = now - birthDate;

       const days = Math.floor(differenceInMilliseconds / (1000 * 60 * 60 * 24));
       const hours = Math.floor(differenceInMilliseconds / (1000 * 60 * 60));
       const minutes = Math.floor(differenceInMilliseconds / (1000 * 60));
       const seconds = Math.floor(differenceInMilliseconds / 1000);

       setAgeDetails({ days, hours, minutes, seconds });
     };

     return (
       <div className="min-h-screen flex items-center justify-center bg-gray-100 p-4">
         <div className="max-w-md w-full bg-white rounded-lg shadow-md p-6">
           <h1 className="text-2xl font-bold text-center mb-6">Calcolatore Et√†</h1>
           <input
             type="date"
             className="w-full border rounded-lg p-2 mb-4"
             value={birthday}
             onChange={(e) => setBirthday(e.target.value)}
           />
           {ageDetails && (
             <div className="mt-4">
               <p><strong>Giorni:</strong> {ageDetails.days}</p>
               <p><strong>Ore:</strong> {ageDetails.hours}</p>
               <p><strong>Minuti:</strong> {ageDetails.minutes}</p>
               <p><strong>Secondi:</strong> {ageDetails.seconds}</p>
             </div>
           )}
         </div>
       </div>
     );
   }
   ```

Step 4: Run the Project
-----------------------
1. Save all changes.
2. Start the development server by running:

   ```bash
   npm run dev
   ```

3. Open your browser and go to `http://localhost:3000` to see your app in action.

-----------------------------------------------------------------------------

Follow these steps to set up and test your Next.js application locally before deploying it online!
